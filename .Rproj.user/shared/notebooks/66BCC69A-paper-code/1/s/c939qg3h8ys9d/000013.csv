"0","# For beta*X "
"0","contribution_data_long <- pivot_longer(contribution_data, cols=c(""C.avg_age"",""C.BAME_2011_perc"",""C.carownership"", ""C.food_walk"",""C.household_median_income""), names_to = ""contributor"", values_to = ""contributor_values"") "
"0",""
"0",""
"0","# 29/01/25 update: we add the condition that we first must filter out the variables for which the beta term is not significant"
"0","# We must create two dataframes C. and T. and then combine them after the fact "
"0",""
"0","t_values_long <- pivot_longer(gwr_data, cols=c(""gwr_age_t"",""gwr_BAME_t"",""gwr_carownership_t"",""gwr_foodwalk_t"", ""gwr_income_t""), names_to = ""t_predictor"", values_to = ""t_values"") "
"0",""
"0","t_values_long = st_set_geometry(t_values_long, NULL) #removes geometry attribute"
"0","# "
"0","contribution_data_long <- contribution_data_long %>%"
"0","  mutate(t_values = t_values_long$t_values,"
"0","         t_predictor = t_values_long$t_predictor,"
"0","         lsoa_codet = t_values_long$lsoa_code)"
"0",""
"0","# contribution_data_long <- contribution_data_long %>%"
"0","#   left_join(t_values_long %>% select(lsoa_code, t_values, t_predictor), by = ""lsoa_code"", relationship = ""many-to-many"")"
"0",""
"0",""
"0",""
"0","contribution_data_long <- contribution_data_long %>%"
"0","  group_by(lsoa_code) %>%"
"0","  mutate("
"0","    # Filter out rows where abs(t_values) <= 1.96 and contribution is negative "
"0","    valid_rows = abs(t_values) > 1.96 & contributor_values > 0,"
"0","    "
"0","    # Arrange by contributor_values within valid rows and get the first (maximum)"
"0","    most_important = ifelse("
"0","      any(valid_rows),  # If there are any valid rows (abs(t_values) > 1.96)"
"0","      first(contributor[valid_rows][order(-contributor_values[valid_rows])]),  # Select max contributor_value"
"0","      NA_character_  # If no rows meet the condition, set most_important to NA"
"0","    )"
"0","  ) %>%"
"0","  ungroup()"
"0",""
"0","test_lsoa <- contribution_data_long %>% filter(lsoa_code == ""E01001412"") %>% dplyr::select(lsoa_code,contributor,contributor_values,t_predictor,t_values)"
"0",""
"0",""
"0","test_lsoa <- test_lsoa %>%"
"0","  group_by(lsoa_code) %>%"
"0","  mutate("
"0","    # Filter out rows where abs(t_values) <= 1.96 and contribution is negative "
"0","    valid_rows = (abs(t_values) > 1.96) & (contributor_values > 0),"
"0","    "
"0","    # Arrange by contributor_values within valid rows and get the first (maximum)"
"0","    most_important = ifelse("
"0","      any(valid_rows),  # If there are any valid rows (abs(t_values) > 1.96)"
"0","      first(contributor[valid_rows][order(-contributor_values[valid_rows])]),  # Select max contributor_value"
"0","      NA_character_  # If no rows meet the condition, set most_important to NA"
"0","    )"
"0","  ) %>%"
"0","  ungroup()"

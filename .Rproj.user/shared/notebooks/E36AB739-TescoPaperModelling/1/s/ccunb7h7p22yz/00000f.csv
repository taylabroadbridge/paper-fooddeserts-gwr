"0","library(GWmodel)"
"2","Loading required package: robustbase
"
"2","Loading required package: Rcpp
"
"2","
Attaching package: ‘Rcpp’

"
"2","The following object is masked from ‘package:rsample’:

    populate

"
"2","Welcome to GWmodel version 2.3-2.
"
"0","# Intercept from bw_model is -0.1458. Going to subtract it here from the fit to see what happens. "
"0",""
"0","gwr_formula <- ""PC1_yj2 ~ household_median_income_2011 + avg_age + food_walk + households_with_cars + BAME_2011_perc -1"""
"0",""
"0","# Convert data to SP (Spatial Polygons Data Frame) so that it is in correct format for GWR"
"0","# Use model_data or prepared_data depending on what model we use above... ?"
"0","# Using prepared_data means PC1 is already transformed with Yeo-Johnson *** this caused errors"
"0","# Alternatively working with the PC1_y1 variable (transformed PC1) within the model_data tibble"
"0",""
"0","# centroids of the scaled_data sf object using st_centroid"
"0","centroids <- st_centroid(scaled_data)"
"0","centroid_coords <- st_coordinates(centroids)"
"0","dist_matrix_centroids <- as.matrix(dist(centroid_coords))"
"0",""
"0","model_data_sp <- as(na.omit(scaled_data), ""Spatial"") "
"0",""
"0","# Finds a bandwidth for a given gwr by optimising a selected function"
"0","# Can do adaptive or fixed bw, change weights (gauss/bisqure) or optimisation method (cv or AIC) "
"0","#gwr_bw <- bw.gwr(gwr_formula, data = model_data_sp, kernel = ""gaussian"", approach = ""AICc"", adaptive = TRUE, dMat=dist_matrix_centroids)"
"0","gwr_bw <- bw.gwr(gwr_formula, data = model_data_sp, kernel = ""bisquare"", approach = ""AICc"", adaptive = TRUE, dMat=dist_matrix_centroids)"
"1","Take a cup of tea and have a break, it will take a few minutes.
"
"1","          -----A kind suggestion from GWmodel development group
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","2084"
"1"," "
"1","AICc value:"
"1"," "
"1","11822.2"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","1296"
"1"," "
"1","AICc value:"
"1"," "
"1","11560.27"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","807"
"1"," "
"1","AICc value:"
"1"," "
"1","11277.85"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","507"
"1"," "
"1","AICc value:"
"1"," "
"1","11016.29"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","319"
"1"," "
"1","AICc value:"
"1"," "
"1","10752.73"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","205"
"1"," "
"1","AICc value:"
"1"," "
"1","10504.87"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","132"
"1"," "
"1","AICc value:"
"1"," "
"1","10306.34"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","89"
"1"," "
"1","AICc value:"
"1"," "
"1","10178.6"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","60"
"1"," "
"1","AICc value:"
"1"," "
"1","10174.34"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","45"
"1"," "
"1","AICc value:"
"1"," "
"1","10306.66"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","72"
"1"," "
"1","AICc value:"
"1"," "
"1","10155.24"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","77"
"1"," "
"1","AICc value:"
"1"," "
"1","10158.58"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","66"
"1"," "
"1","AICc value:"
"1"," "
"1","10158.44"
"1"," "
"1","
"
"1","Adaptive bandwidth (number of nearest neighbours):"
"1"," "
"1","72"
"1"," "
"1","AICc value:"
"1"," "
"1","10155.24"
"1"," "
"1","
"
"0","# Fit the GWR"
"0","gwr_fit <- gwr.basic(gwr_formula, bw=gwr_bw, kernel=""bisquare"", adaptive=TRUE, dMat = dist_matrix_centroids, data=model_data_sp)"
"0",""
"0","# Check the corresponding linear model is the same as above"
"0","gwr_fit$lm$coefficients"
"1","household_median_income_2011 "
"1","                     avg_age "
"1","
"
"1","                  -0.7268301 "
"1","                  -0.2120940 "
"1","
"
"1","                   food_walk "
"1","        households_with_cars "
"1","
"
"1","                  -0.1575905 "
"1","                   0.6199178 "
"1","
"
"1","              BAME_2011_perc "
"1","
"
"1","                   0.5037928 "
"1","
"
"0","# Now let's join the results of GWR (local R2, local coefficients) to our dataframe (clustering_data?)"
"0","clustering_data <- clustering_data %>%"
"0","  mutate(#gwr_intercept = gwr_fit$SDF$Intercept,"
"0","         #gwr_intercept_t = gwr_fit$SDF$Intercept_TV,"
"0","         gwr_income =  gwr_fit$SDF$household_median_income_2011,"
"0","         gwr_income_t = gwr_fit$SDF$household_median_income_2011_TV,"
"0","         gwr_foodwalk = gwr_fit$SDF$food_walk,"
"0","         gwr_foodwalk_t = gwr_fit$SDF$food_walk_TV,"
"0","         gwr_BAME = gwr_fit$SDF$BAME_2011_perc,"
"0","         gwr_BAME_t = gwr_fit$SDF$BAME_2011_perc_TV,"
"0","         #gwr_foodcar = gwr_fit$SDF$food_car,"
"0","         #gwr_foodcar_t = gwr_fit$SDF$food_car_TV,"
"0","         #gwr_qualifications = gwr_fit$SDF$no_qualifications_2011_perc,"
"0","         #gwr_qualifications_t = gwr_fit$SDF$no_qualifications_2011_perc_TV,"
"0","         gwr_carownership = gwr_fit$SDF$households_with_cars,"
"0","         gwr_carownership_t = gwr_fit$SDF$households_with_cars_TV,"
"0","         gwr_age = gwr_fit$SDF$avg_age,"
"0","         gwr_age_t = gwr_fit$SDF$avg_age_TV,"
"0","         #gwr_foodpt = gwr_fit$SDF$food_pt,"
"0","         #gwr_foodpt_t = gwr_fit$SDF$food_pt_TV,"
"0","         gwr_localr2 = gwr_fit$SDF$Local_R2,"
"0","         y_hat = gwr_fit$SDF$yhat,"
"0","         gwr_residuals = gwr_fit$SDF$residual,"
"0","         gwr_residuals_abs = abs(gwr_fit$SDF$residual),"
"0","         lm_hat = gwr_fit$lm$fitted.values)"
"0",""
"0","# Check this joins properly"
"0","clustering_data$PC1_yj <- model_data_sp$PC1_yj"

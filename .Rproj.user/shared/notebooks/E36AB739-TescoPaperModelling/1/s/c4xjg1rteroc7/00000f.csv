"0","# Also remove high leverage points from the data here "
"0",""
"0","# Define recipe with all predictors"
"0","my_recipe <- recipe(PC1 ~ ., data = na.omit(model_data)) %>% step_center(all_predictors()) %>% step_scale(all_predictors()) %>% #NOTE: Removing NAs and removing geometry attribute prior to defining the recipe"
"0","  step_YeoJohnson(PC1) "
"0",""
"0","# Extract the corresponding lambda value for yeo-johnson transform. This will be needed later "
"0","lambda_yj <- prep(my_recipe)$steps[[3]]$lambdas"
"0","#cat(""The value of lambda for Yeo-Johnson is"", lambda_yj, ""\n"")"
"0",""
"0","# Fit the recipe to the data"
"0","# Prep applies the transforms to the data; juice extracts the preprocessed data;"
"0","# head() to view the first few rows of the preprocessed data"
"0","# bake() applies the same preprocessing steps to the new data (new_data) using the recipe (my_recipe), ensuring the new data undergoes the same preprocessing steps as the original data."
"0",""
"0","prepared_data <- prep(my_recipe) %>% "
"0","  juice()"
"0",""
"0","# The PC1 variable within ""prepared_data"" is now transformed according to YJ"
"0",""
"0","# Plot the original response variable"
"0","ggplot(model_data, aes(x = PC1)) +"
"0","  geom_histogram(fill = ""lightblue"", color = ""black"") +"
"0","  labs(title = ""Original Data (Before Transformation)"", x = ""PC1"", y = ""Frequency"")"
"1","[38;5;232m`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.[39m
"

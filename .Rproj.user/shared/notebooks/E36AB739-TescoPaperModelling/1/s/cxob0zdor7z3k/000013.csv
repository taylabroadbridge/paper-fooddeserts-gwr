"0","# Create spatial weights matrix using queen contiguity scheme"
"0","# Making another dataset called ""clustering data"" for the next section"
"0",""
"0","clustering_data <- london_data"
"0","clustering_data <- na.omit(clustering_data)"
"0",""
"0","# Playing around with distance-based measures"
"0","# Extracting coordinates and converting to lon-lat form (so that distances are in KM)"
"0","#coords <- coordinates(spTransform(as_Spatial(clustering_data$geometry), CRS(""+proj=longlat +datum=WGS84"")))"
"0",""
"0","# First we want to figure out an upper limit for the distance radius "
"0","#coords <- coordinates(as_Spatial(clustering_data))[ ,1:2] #extract XY coordinate points. We must have as_Spatial frame"
"0","#k1 <- knn2nb(knearneigh(coords)) "
"0","#k1dists <- unlist(nbdists(k1, coords, longlat = TRUE)) #Spatial link distance measures "
"0","#For longlat=TRUE, great circle distance used"
"0","#summary(k1dists)"
"0",""
"0","#Now computing the fixed-distance weights matrix"
"0","#weighted_matrix_d <- dnearneigh(coords, 0 , max(k1dists), longlat = TRUE)"
"0","#str(weighted_matrix_d)"
"0","# Extract the spatial weights for the distance-based weightings matrix"
"0","#weights2 <- nb2listw(weighted_matrix_d)"
"0",""
"0","# Contiguity style weights matrix according to queen criterion"
"0","# LSOAs are neighbours if they share a common POINT"
"0","weights <- poly2nb(clustering_data, queen = TRUE, snap = 1e-5) #boundaries <snap distance apart are contiguous "
"0","weights <- nb2listw(weights, style = ""W"")"
"0",""
"0","# Global Moran's I"
"0","gmi <- moran.test(clustering_data$PC1, listw = weights)"
"0",""
"0","# LISA cluster instead?"
"0","# Compute Local Moran's I"
"0","# In addition, we output an attribute data frame ""quadr"" with mean and median quadrant columns, and a column splitting on the demeaned variable and lagged demeaned variable at zero."
"0","lisa <- localmoran(clustering_data$PC1, weights)"
"0","summary(lisa)"
"1",""
"1","       Ii          "
"1","      E.Ii           "
"1","     Var.Ii       "
"1","
"
"1"," Min.   :-3.50518  "
"1"," Min.   :-7.511e-03  "
"1"," Min.   :0.00000  "
"1","
"
"1"," 1st Qu.: 0.01978  "
"1"," 1st Qu.:-3.777e-04  "
"1"," 1st Qu.:0.01577  "
"1","
"
"1"," Median : 0.25305  "
"1"," Median :-1.194e-04  "
"1"," Median :0.07113  "
"1","
"
"1"," Mean   : 0.70452  "
"1"," Mean   :-2.976e-04  "
"1"," Mean   :0.18564  "
"1","
"
"1"," 3rd Qu.: 0.95240  "
"1"," 3rd Qu.:-2.839e-05  "
"1"," 3rd Qu.:0.22517  "
"1","
"
"1"," Max.   : 9.22180  "
"1"," Max.   : 0.000e+00  "
"1"," Max.   :4.90220  "
"1","
"
"1",""
"1","      Z.Ii        "
"1"," Pr(z != E(Ii))   "
"1","
"
"1"," Min.   :-4.7575  "
"1"," Min.   :0.00000  "
"1","
"
"1"," 1st Qu.: 0.2542  "
"1"," 1st Qu.:0.02134  "
"1","
"
"1"," Median : 1.1693  "
"1"," Median :0.20392  "
"1","
"
"1"," Mean   : 1.3394  "
"1"," Mean   :0.31653  "
"1","
"
"1"," 3rd Qu.: 2.2757  "
"1"," 3rd Qu.:0.57135  "
"1","
"
"1"," Max.   : 6.9240  "
"1"," Max.   :0.99940  "
"1","
"
"0","# LISA clusters according to significance (p>0.05 implies not significant) "
"0","significance <- 0.05"
"0","clustering_data$clusters <- attributes(lisa)$quadr$mean"
"0","clustering_data$clusters[lisa[ ,5] > significance] <- ""Insignificant"""
"0","#clustering_data$clusters"
"0",""
"0","clustering_data <- clustering_data %>%"
"0","  mutate(clusters = case_when("
"0","    is.na(clusters) ~ ""Insignificant"","
"0","    TRUE ~ as.factor(clusters)))"
"0",""
"0","clustering_data$clusters <- factor(clustering_data$clusters, levels=c(""Low-Low"",""Low-High"",""High-Low"",""High-High"",""Insignificant""))"
"0","           "
"0",""
"0","#Map of LISA clusters"
"0","lisa_map <- tm_shape(clustering_data) + tm_polygons(""clusters"", fill.scale = tm_scale_categorical(values = c(""blue"", ""lightblue"", ""coral"", ""red"",""grey"")), col_alpha=0, tm_legend(title=""Clusters"", frame=FALSE, title.size=1.2, text.size=1)) + tm_borders(lwd=0.1) +  tm_layout(frame=FALSE) + tm_title(text = """")"
"0","lisa_map"
